trigger:
  branches:
    include:
      - main
      - develop
      - test
      - optimize-test

pool:
  vmImage: 'ubuntu-latest'
  clean: true
  variables:

    impacted_tests: ''

jobs:
  - job: CheckModifiedFiles
    displayName: 'Check Modified Files and Decide Test Runs'
    steps:
      - task: Docker@2
        displayName: 'Checkout code'

      # Pull the existing Docker image from a container registry
      - script: |
          docker pull tan000/choose_test_ci_cd:latest  # Replace with the actual image name and tag
        displayName: 'Pull Existing Docker Image'

      # Run the Python script inside the existing Docker container and capture output
      - script: |
          impacted_tests=$(docker run --rm tan000/choose_test_ci_cd:latest | tr '\n' ',' | sed 's/,$//')  # Replace with the actual image name
          echo "Impacted Tests: $impacted_tests"
          echo "##vso[task.setvariable variable=impacted_tests;isOutput=true]$impacted_tests"
        name: SetImpactedTests

        displayName: 'Capture Impacted Tests from Python Script'

  # Run Unit Tests if impacted
  - job: UnitTests
    displayName: 'Run Unit Tests'
    dependsOn: CheckModifiedFiles
    variables:
      impacted_tests: $[ dependencies.CheckModifiedFiles.outputs['SetImpactedTests.impacted_tests'] ]
    condition: and(succeeded(), contains(variables['impacted_tests'], 'unit'))
    steps:
      - task: NodeTool@0
        inputs:
          versionSpec: '18.x'
        displayName: 'Install Node.js'
      
      - script: npm install
        displayName: 'Install dependencies'

      - script: npm run test:unit
        displayName: 'Run Unit Tests'

  # Run Functional Tests if impacted
  - job: FunctionalTests
    displayName: 'Run Functional Tests'
    dependsOn: CheckModifiedFiles
    variables:
      impacted_tests: $[ dependencies.CheckModifiedFiles.outputs['SetImpactedTests.impacted_tests'] ]
    condition: and(succeeded(), contains(variables['impacted_tests'], 'functional'))
    steps:
      - task: NodeTool@0
        inputs:
          versionSpec: '18.x'
        displayName: 'Install Node.js'
      
      - script: npm install
        displayName: 'Install dependencies'

      - script: npm run test:functional
        displayName: 'Run Functional Tests'

  # Run E2E Tests if impacted
  - job: E2ETests
    displayName: 'Run E2E Tests'
    dependsOn: CheckModifiedFiles
    variables:
      impacted_tests: $[ dependencies.CheckModifiedFiles.outputs['SetImpactedTests.impacted_tests'] ]
    condition: and(succeeded(), contains(variables['impacted_tests'], 'e2e'))
    steps:
      - task: NodeTool@0
        inputs:
          versionSpec: '18.x'
        displayName: 'Install Node.js'
      
      - script: npm install
        displayName: 'Install dependencies'

      - script: npm run test:e2e
        displayName: 'Run E2E Tests'
